services:
  # AI CodeScan main application
  ai-codescan:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: ai-codescan-app
    ports:
      - "8501:8501"
    environment:
      - AI_CODESCAN_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=ai_codescan_password
      - NEO4J_DATABASE=ai-codescan
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      # Add your OpenAI API key here or in .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=gpt-4
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      # Mount source code for development (remove in production)
      - ./src:/app/src:ro
      - ./temp_repos:/app/temp_repos
      - ./logs:/app/logs
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ai-codescan-network
    restart: unless-stopped

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.14-community
    container_name: ai-codescan-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/ai_codescan_password
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_default__database=ai-codescan
      - NEO4J_dbms_databases_default__to__read__only=false
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2g
      - NEO4J_dbms_memory_pagecache_size=1g
      # Security settings
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - ai-codescan-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis for session management and caching
  redis:
    image: redis:7.2-alpine
    container_name: ai-codescan-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - ai-codescan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Portainer for container management (development only)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: ai-codescan-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - ai-codescan-network
    restart: unless-stopped
    profiles:
      - dev

networks:
  ai-codescan-network:
    driver: bridge
    name: ai-codescan-network

volumes:
  neo4j_data:
    name: ai-codescan-neo4j-data
  neo4j_logs:
    name: ai-codescan-neo4j-logs
  neo4j_import:
    name: ai-codescan-neo4j-import
  neo4j_plugins:
    name: ai-codescan-neo4j-plugins
  redis_data:
    name: ai-codescan-redis-data
  portainer_data:
    name: ai-codescan-portainer-data 