# AI CodeScan Environment Configuration Example
# Copy this file to .env and update with your actual values

# Application Environment
AI_CODESCAN_ENV=development

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000
OPENAI_TEMPERATURE=0.1

# Neo4j Configuration
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=ai_codescan_password
NEO4J_DATABASE=ai-codescan

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Streamlit Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Security
SECRET_KEY=your-secret-key-here-change-in-production
PAT_ENCRYPTION_KEY=your-pat-encryption-key-here-change-in-production
SESSION_TIMEOUT=3600

# External APIs
GITHUB_API_BASE_URL=https://api.github.com
GITLAB_API_BASE_URL=https://gitlab.com/api/v4
BITBUCKET_API_BASE_URL=https://api.bitbucket.org/2.0

# Performance Limits
MAX_CONCURRENT_TASKS=5
MAX_REPOSITORY_SIZE_MB=500
CLONE_TIMEOUT_SECONDS=300
ANALYSIS_TIMEOUT_SECONDS=1800

# Storage
TEMP_REPOS_PATH=./temp_repos
CLEANUP_TEMP_FILES=true
TEMP_FILE_TTL_HOURS=24

# Monitoring
ENABLE_PERFORMANCE_MONITORING=true
METRICS_ENABLED=true
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=logs/ai-codescan.log# ==============================================================================
# IMPORTANT SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Get OpenAI API key from: https://platform.openai.com/api-keys
# 3. Replace OPENAI_API_KEY with your actual key
# 4. Run: docker-compose up --build to start the application
# ==============================================================================
